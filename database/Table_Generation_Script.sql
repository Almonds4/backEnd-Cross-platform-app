-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS courses
(
    course_id serial NOT NULL,
    course_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    completion_time interval,
    description text COLLATE pg_catalog."default",
    price numeric(5, 2),
    language character varying(15) COLLATE pg_catalog."default",
    required_material character varying(255) COLLATE pg_catalog."default",
    meeting_times character varying(255) COLLATE pg_catalog."default",
    department department_enum,
    CONSTRAINT courses_pkey PRIMARY KEY (course_id),
    CONSTRAINT course_name UNIQUE (course_name)
);

CREATE TABLE IF NOT EXISTS users
(
    username character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    "DoB" date,
    phone character varying(20) COLLATE pg_catalog."default",
    photo_url text,
    description text,
    "linkedIN" text,
    gender character varying(50),
    address character varying(255),
    enrollment_date_time timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    email character varying(255),
    account_type character varying(255) DEFAULT 'student',
    alumni boolean DEFAULT FALSE,
    alumni_grad date DEFAULT Null,
    CONSTRAINT users_pkey PRIMARY KEY (username)
);

CREATE TABLE IF NOT EXISTS instructor_courses
(
    username character varying(255),
    course_id integer,
    CONSTRAINT user_id PRIMARY KEY (username, course_id)
);

CREATE TABLE IF NOT EXISTS modules
(
    course_id integer,
    module_title character varying(255),
    module_description text,
    module_material text,
    CONSTRAINT course_id PRIMARY KEY (course_id, module_title)
);


CREATE TABLE IF NOT EXISTS library
(
    item_id serial,
    title character varying(255),
    author character varying(255),
    year integer,
    resource_type resource_enum,
    file_url text,
    tag text,
    PRIMARY KEY (item_id)
);

CREATE TABLE IF NOT EXISTS transaction_history
(
    transaction_id serial,
    username character varying(255),
    item character varying(255),
    price numeric(10, 2),
    transaction_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    transaction_status transaction_status_enum NOT NULL,
    PRIMARY KEY (transaction_id)
);

CREATE TABLE IF NOT EXISTS calendar
(
    username character varying(255) NOT NULL,
    event_date timestamp with time zone NOT NULL,
    description text,
    PRIMARY KEY (username, event_date)
);

CREATE TABLE IF NOT EXISTS discussion_forum
(
    forum_id serial,
    course_id integer,
    module_title character varying(255),
    comment_username character varying(255),
    comment_description text NOT NULL,
    comment_date_time timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    parent_comment_id integer,
    PRIMARY KEY (forum_id)
);

CREATE TABLE IF NOT EXISTS mailbox
(
    mail_id serial,
    sender_username character varying(255),
    recipient_username character varying(255),
    message text NOT NULL,
    sent_date_time timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (mail_id)
);

CREATE TABLE IF NOT EXISTS enrollment
(
    username character varying(255),
    course_id integer,
    date_enrolled date DEFAULT CURRENT_DATE,
    PRIMARY KEY (username, course_id)
);

CREATE TABLE IF NOT EXISTS grades
(
    username character varying(255),
    course_id integer,
    module_title character varying(255),
    module_grade integer,
    PRIMARY KEY (username, course_id, module_title)
);

CREATE TABLE IF NOT EXISTS mailing_list
(
    id serial NOT NULL,
    email character varying(255),
    consent boolean,
    date_subscribed timestamp with time zone,
    opt_out_date timestamp with time zone,
    source character varying,
    "is-verified" boolean,
    email_status character varying(255) DEFAULT 'Pending',
    PRIMARY KEY (id),
    CONSTRAINT email UNIQUE (email)
);

ALTER TABLE IF EXISTS instructor_courses
    ADD CONSTRAINT username FOREIGN KEY (username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS instructor_courses
    ADD CONSTRAINT course_id FOREIGN KEY (course_id)
    REFERENCES courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS modules
    ADD CONSTRAINT modules_course_id FOREIGN KEY (course_id)
    REFERENCES courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS transaction_history
    ADD CONSTRAINT username FOREIGN KEY (username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS calendar
    ADD CONSTRAINT user_name FOREIGN KEY (username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS discussion_forum
    ADD CONSTRAINT disc_course_id FOREIGN KEY (course_id)
    REFERENCES courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS discussion_forum
    ADD CONSTRAINT module_title FOREIGN KEY (course_id, module_title)
    REFERENCES modules (course_id, module_title) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS discussion_forum
    ADD CONSTRAINT comment_username FOREIGN KEY (comment_username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS discussion_forum
    ADD CONSTRAINT parent_comment_id FOREIGN KEY (forum_id)
    REFERENCES discussion_forum (forum_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS mailbox
    ADD CONSTRAINT mail_username FOREIGN KEY (sender_username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS mailbox
    ADD CONSTRAINT mail_username1 FOREIGN KEY (recipient_username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS enrollment
    ADD CONSTRAINT username FOREIGN KEY (username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS enrollment
    ADD CONSTRAINT course_id FOREIGN KEY (course_id)
    REFERENCES courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS grades
    ADD CONSTRAINT username FOREIGN KEY (username)
    REFERENCES users (username) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS grades
    ADD CONSTRAINT grades_course_id FOREIGN KEY (course_id)
    REFERENCES courses (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS grades
    ADD CONSTRAINT module_title FOREIGN KEY (course_id, module_title)
    REFERENCES modules (course_id, module_title) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;